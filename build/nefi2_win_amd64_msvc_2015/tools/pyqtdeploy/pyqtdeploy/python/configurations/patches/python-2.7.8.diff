diff -ruN Python-2.7.8.orig/Modules/_localemodule.c Python-2.7.8/Modules/_localemodule.c
--- Python-2.7.8.orig/Modules/_localemodule.c	2014-06-30 03:05:41.000000000 +0100
+++ Python-2.7.8/Modules/_localemodule.c	2014-07-14 17:41:31.000000000 +0100
@@ -199,6 +199,7 @@
     return result_object;
 }
 
+#if !defined(HAVE_BROKEN_LOCALECONV)
 PyDoc_STRVAR(localeconv__doc__,
 "() -> dict. Returns numeric and monetary locale-specific parameters.");
 
@@ -267,6 +268,7 @@
     Py_XDECREF(x);
     return NULL;
 }
+#endif
 
 PyDoc_STRVAR(strcoll__doc__,
 "string,string -> int. Compares two strings according to the locale.");
@@ -655,8 +657,10 @@
 static struct PyMethodDef PyLocale_Methods[] = {
   {"setlocale", (PyCFunction) PyLocale_setlocale,
    METH_VARARGS, setlocale__doc__},
+#if !defined(HAVE_BROKEN_LOCALECONV)
   {"localeconv", (PyCFunction) PyLocale_localeconv,
    METH_NOARGS, localeconv__doc__},
+#endif
   {"strcoll", (PyCFunction) PyLocale_strcoll,
    METH_VARARGS, strcoll__doc__},
   {"strxfrm", (PyCFunction) PyLocale_strxfrm,
diff -ruN Python-2.7.8.orig/Modules/grpmodule.c Python-2.7.8/Modules/grpmodule.c
--- Python-2.7.8.orig/Modules/grpmodule.c	2014-06-30 03:05:43.000000000 +0100
+++ Python-2.7.8/Modules/grpmodule.c	2014-07-14 17:44:05.000000000 +0100
@@ -140,6 +140,7 @@
 
     if ((d = PyList_New(0)) == NULL)
         return NULL;
+#if !defined(HAVE_BROKEN_GETGRENT)
     setgrent();
     while ((p = getgrent()) != NULL) {
         PyObject *v = mkgrent(p);
@@ -152,6 +153,7 @@
         Py_DECREF(v);
     }
     endgrent();
+#endif
     return d;
 }
 
diff -ruN Python-2.7.8.orig/Modules/posixmodule.c Python-2.7.8/Modules/posixmodule.c
--- Python-2.7.8.orig/Modules/posixmodule.c	2014-06-30 03:05:43.000000000 +0100
+++ Python-2.7.8/Modules/posixmodule.c	2014-07-14 17:44:51.000000000 +0100
@@ -3927,7 +3927,7 @@
     slave_fd = open(slave_name, O_RDWR | O_NOCTTY); /* open slave */
     if (slave_fd < 0)
         return posix_error();
-#if !defined(__CYGWIN__) && !defined(HAVE_DEV_PTC)
+#if !defined(__CYGWIN__) && !defined(HAVE_DEV_PTC) && defined(I_PUSH)
     ioctl(slave_fd, I_PUSH, "ptem"); /* push ptem */
     ioctl(slave_fd, I_PUSH, "ldterm"); /* push ldterm */
 #ifndef __hpux
diff -ruN Python-2.7.8.orig/Modules/pwdmodule.c Python-2.7.8/Modules/pwdmodule.c
--- Python-2.7.8.orig/Modules/pwdmodule.c	2014-06-30 03:05:43.000000000 +0100
+++ Python-2.7.8/Modules/pwdmodule.c	2014-07-14 17:46:03.000000000 +0100
@@ -78,7 +78,11 @@
 #ifdef __VMS
     SETS(setIndex++, "");
 #else
+#if !defined(HAVE_BROKEN_GECOS)
     SETS(setIndex++, p->pw_gecos);
+#else
+    SETS(setIndex++, "");
+#endif
 #endif
     SETS(setIndex++, p->pw_dir);
     SETS(setIndex++, p->pw_shell);
diff -ruN Python-2.7.8.orig/Modules/termios.c Python-2.7.8/Modules/termios.c
--- Python-2.7.8.orig/Modules/termios.c	2014-06-30 03:05:44.000000000 +0100
+++ Python-2.7.8/Modules/termios.c	2014-07-14 17:47:06.000000000 +0100
@@ -240,8 +240,12 @@
     if (!PyArg_ParseTuple(args, "O&:tcdrain",
                           fdconv, &fd))
         return NULL;
+#if !defined(HAVE_BROKEN_TCDRAIN)
     if (tcdrain(fd) == -1)
         return PyErr_SetFromErrno(TermiosError);
+#else
+    if (ioctl(fd, TCSBRK, 1) == -1)
+#endif
 
     Py_INCREF(Py_None);
     return Py_None;
diff -ruN Python-2.7.8.orig/Objects/stringlib/formatter.h Python-2.7.8/Objects/stringlib/formatter.h
--- Python-2.7.8.orig/Objects/stringlib/formatter.h	2014-06-30 03:05:45.000000000 +0100
+++ Python-2.7.8/Objects/stringlib/formatter.h	2014-07-14 17:35:44.000000000 +0100
@@ -639,6 +639,7 @@
 get_locale_info(int type, LocaleInfo *locale_info)
 {
     switch (type) {
+#if !defined(HAVE_BROKEN_LOCALECONV)
     case LT_CURRENT_LOCALE: {
         struct lconv *locale_data = localeconv();
         locale_info->decimal_point = locale_data->decimal_point;
@@ -646,6 +647,9 @@
         locale_info->grouping = locale_data->grouping;
         break;
     }
+#else
+    case LT_CURRENT_LOCALE:
+#endif
     case LT_DEFAULT_LOCALE:
         locale_info->decimal_point = ".";
         locale_info->thousands_sep = ",";
diff -ruN Python-2.7.8.orig/Objects/stringlib/localeutil.h Python-2.7.8/Objects/stringlib/localeutil.h
--- Python-2.7.8.orig/Objects/stringlib/localeutil.h	2014-06-30 03:05:45.000000000 +0100
+++ Python-2.7.8/Objects/stringlib/localeutil.h	2014-07-14 17:39:25.000000000 +0100
@@ -202,9 +202,14 @@
                                   Py_ssize_t n_digits,
                                   Py_ssize_t min_width)
 {
+#if !defined(HAVE_BROKEN_LOCALECONV)
         struct lconv *locale_data = localeconv();
         const char *grouping = locale_data->grouping;
         const char *thousands_sep = locale_data->thousands_sep;
+#else
+        const char *grouping = "\3";
+        const char *thousands_sep = ",";
+#endif
 
         return _Py_InsertThousandsGrouping(buffer, n_buffer, digits, n_digits,
                                            min_width, grouping, thousands_sep);
diff -ruN Python-2.7.8.orig/Python/pystrtod.c Python-2.7.8/Python/pystrtod.c
--- Python-2.7.8.orig/Python/pystrtod.c	2014-06-30 03:05:47.000000000 +0100
+++ Python-2.7.8/Python/pystrtod.c	2014-07-14 17:34:18.000000000 +0100
@@ -126,7 +126,9 @@
 {
     char *fail_pos;
     double val = -1.0;
+#if !defined(HAVE_BROKEN_LOCALECONV)
     struct lconv *locale_data;
+#endif
     const char *decimal_point;
     size_t decimal_point_len;
     const char *p, *decimal_point_pos;
@@ -138,8 +140,12 @@
 
     fail_pos = NULL;
 
+#if !defined(HAVE_BROKEN_LOCALECONV)
     locale_data = localeconv();
     decimal_point = locale_data->decimal_point;
+#else
+    decimal_point = ".";
+#endif
     decimal_point_len = strlen(decimal_point);
 
     assert(decimal_point_len != 0);
@@ -375,6 +381,7 @@
 Py_LOCAL_INLINE(void)
 change_decimal_from_locale_to_dot(char* buffer)
 {
+#if !defined(HAVE_BROKEN_LOCALECONV)
     struct lconv *locale_data = localeconv();
     const char *decimal_point = locale_data->decimal_point;
 
@@ -399,6 +406,7 @@
             }
         }
     }
+#endif
 }
 
 
